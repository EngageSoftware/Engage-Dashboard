<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdminAlert.Text" xml:space="preserve">
    <value>Admin Alert</value>
  </data>
  <data name="ChartsPanel.Text" xml:space="preserve">
    <value>Charts</value>
  </data>
  <data name="Database Size By Log and Data.Text" xml:space="preserve">
    <value>Database Size By Log and Data</value>
  </data>
  <data name="DatabaseLogSize.Text" xml:space="preserve">
    <value>Transaction Log</value>
  </data>
  <data name="DatabaseSize.Text" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="DatabaseSizeChart.Text" xml:space="preserve">
    <value>If you are concerned the size of your database, one common method of reducing your database's size is to shrink the transaction log when it gets to be too large in comparison with the actual data.  You can shrink a database in SQL Management Studio.</value>
  </data>
  <data name="DisabledChart.Alt" xml:space="preserve">
    <value>Disabled Chart Image</value>
  </data>
  <data name="EmptyEventLogMessage.Text" xml:space="preserve">
    <value>The Event Log for this site does not have any entries</value>
  </data>
  <data name="Event Log Entries by Type.Text" xml:space="preserve">
    <value>Event Log Entries by Type</value>
  </data>
  <data name="EventLogChart.Text" xml:space="preserve">
    <value>You can keep track of the sorts of events are occurring most often on your website through this chart.</value>
  </data>
  <data name="Exception.Text" xml:space="preserve">
    <value>Exception</value>
  </data>
  <data name="GeneralAdminOperation.Text" xml:space="preserve">
    <value>General Admin Operation</value>
  </data>
  <data name="HostAlert.Text" xml:space="preserve">
    <value>Host Alert</value>
  </data>
  <data name="InstallChartingButton.Text" xml:space="preserve">
    <value>Install Charting Support</value>
  </data>
  <data name="InstallChartingSupport.Text" xml:space="preserve">
    <value>&lt;p&gt;When you click on the button below, the module will alter your web.config (using the same XmlMerge utility that the DNN core updates use).  This change will cause your site to restart (similar to installing a new module).&lt;/p&gt;
&lt;p&gt;The installation will add the following line to your web.config's &lt;span class="code"&gt;configuration/system.web/httpHandlers&lt;/span&gt; section for classic IIS pipeline support: &lt;span class="code"&gt;&amp;lt;add path="ChartImage.axd" verb="*" type="Telerik.Web.UI.ChartHttpHandler, Telerik.Web.UI, Culture=neutral, PublicKeyToken=121fae78165ba3d4" validate="false" /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The following line will also be added to your web.config's &lt;span class="code"&gt;configuration/system.webServer/handlers&lt;/span&gt; section for integrated pipeline support in IIS 7: &lt;span class="code"&gt;&amp;lt;add name="TelerikCharting" path="ChartImage.axd" verb="*" type="Telerik.Web.UI.ChartHttpHandler, Telerik.Web.UI, Culture=neutral, PublicKeyToken=121fae78165ba3d4" preCondition="integratedMode,runtimeVersionv2.0" /&gt;
&lt;/span&gt;&lt;/p&gt;</value>
  </data>
  <data name="InstallChartingSupport.Title" xml:space="preserve">
    <value>Install Charting Support</value>
  </data>
  <data name="InstallChartingSupportIntro.Text" xml:space="preserve">
    <value>This module uses &lt;a href="http://www.telerik.com/products/aspnet-ajax/controls/chart/overview.aspx" target="_blank"&gt;Telerik's RadChart&lt;/a&gt; component to display informative charts of various statistics about your site.  This component needs to install an HTTP handler into your web.config. Click to</value>
  </data>
  <data name="ItemCreated.Text" xml:space="preserve">
    <value>Item Created</value>
  </data>
  <data name="ItemDeleted.Text" xml:space="preserve">
    <value>Item Deleted</value>
  </data>
  <data name="ItemUpdated.Text" xml:space="preserve">
    <value>Item Updated</value>
  </data>
  <data name="OperationFailure.Text" xml:space="preserve">
    <value>Operation Failure</value>
  </data>
  <data name="OperationSuccess.Text" xml:space="preserve">
    <value>Operation Success</value>
  </data>
  <data name="Pages With and Without Keywords or Descriptions.Text" xml:space="preserve">
    <value>Pages With and Without Keywords or Descriptions</value>
  </data>
  <data name="PagesWithDescriptionAndKeywords.Text" xml:space="preserve">
    <value>Pages with Description and Keywords</value>
  </data>
  <data name="PagesWithoutDescriptionOrKeywords.Text" xml:space="preserve">
    <value>Pages Lacking either Description or Keywords</value>
  </data>
  <data name="SecurityException.Text" xml:space="preserve">
    <value>Security Exception</value>
  </data>
  <data name="SeoPagesChart.Text" xml:space="preserve">
    <value>If you are concerned about your website's visiblity to search engines, make sure that all of your pages have a description and keywords set.</value>
  </data>
</root>